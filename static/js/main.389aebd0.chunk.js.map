{"version":3,"sources":["Nav.jsx","data/project_data.js","Project.jsx","Projects.jsx","Photo.jsx","constants/links.js","Photos.jsx","MainContent.jsx","constants/backdrops.js","Background.jsx","Intro.jsx","App.js","serviceWorker.js","index.js"],"names":["Nav","props","navigate","page","console","log","className","onClick","name","project_data","title","image","description","github","live","Project","project","href","target","rel","src","alt","Projects","TransitionGroup","CSSTransition","timeout","enter","exit","classNames","projects","map","key","Photo","url","LINKS","Photos","MainContent","BACKDROPS","Background","useState","index","cycleBackdrop","useEffect","interval","setInterval","BACKDRROPS","length","$","fadeIn","clearInterval","style","backgroundImage","Intro","App","setPage","id","e","parseInt","getAttribute","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.389aebd0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Nav = (props) => {\r\n    const {navigate, page} = props\r\n    console.log(props)\r\n    return (\r\n        <div className=\"nav\">\r\n            <span className={`nav-link ${page === 0 ? 'active': ''}`} onClick={navigate} name=\"0\">Projects</span>\r\n            <span className={`nav-link ${page === 1 ? 'active' : ''}`} onClick={navigate} name=\"1\">Photos</span>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Nav;\r\n","const project_data = [\r\n  {\r\n    title: \"Swyle\",\r\n    image: \"https://i.imgur.com/87lXPrY.png\",\r\n    description:\r\n      \"A websocket-powered blogging platform. It uses Ruby on Rails, GraphQL, Apollo, and React.  Post your own articles, upload images, make comments, react to posts in many fun ways.\",\r\n    github: \"https://github.com/genxhero/swyle\",\r\n    live: \"https://afternoon-eyrie-69554.herokuapp.com/\",\r\n  },\r\n  {\r\n    title: \"Fliquor\",\r\n    image: \"https://i.imgur.com/kgdpWhZ.png\",\r\n    description:\r\n      \"Functonal clone of Flickr built with Rails on the backend, React on the frontend, and some very sweet CSS. Come on in, share your photos, leave comments, find you inspiration!\",\r\n    github: \"https://github.com/genxhero/fliquor\",\r\n    live: \"https://fliquor.herokuapp.com/#/\",\r\n  },\r\n  {\r\n    title: \"Library of Legends\",\r\n    image: \"https://i.imgur.com/NXOzKc0.png\",\r\n    description:\r\n      \"A MERN application utilizing GraphQL for creating and storing characters made for the Pathfinder Role Playing Game Second Edition. It displays information to the user with a React front-end and uses GraphQL to make API calls to a Mongo and Express back-end while a character's image is stored on an AWS S3 bucket.\",\r\n    github: \"https://github.com/genxhero/libraryoflegends\",\r\n    live: \"https://cryptic-plains-92849.herokuapp.com/#/\",\r\n  },\r\n  {\r\n    title: \"Hedronite Attack\",\r\n    image: \"https://i.imgur.com/C6dgA4I.png\",\r\n    description:\r\n      \"Built in JavaScript using HTML5 and Canvas libraries, Hedronite Attack is a fast- paced, action - packed game with the kind of difficulty that anyone born in the 80s can appreciate!\",\r\n    github: \"https://github.com/genxhero/vectorsigma\",\r\n    live: \"https://genxhero.github.io/vectorsigma/\",\r\n  },\r\n  {\r\n    title: \"Aaron Goddard's Portfolio\",\r\n    image: \"https://i.imgur.com/79zH1UY.jpg\",\r\n    description: \"This very portfolio is, in and of itself, a React project\",\r\n    github: \"https://github.com/genxhero/portfolionew\",\r\n    live: \"https://genxhero.github.io/portfolionew/\",\r\n  },\r\n];\r\n\r\nexport default project_data;","import React from 'react'\r\n\r\nconst Project = props => {\r\n    const {project} = props;\r\n    return (\r\n      <div className=\"project\">\r\n        <a\r\n          className=\"project-title\"\r\n          href={project.live}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {\" \"}\r\n          {project.title}\r\n        </a>\r\n        <p className=\"project-description\">{project.description}</p>\r\n        <div className=\"project-thumbnail\">\r\n          <img src={project.image} alt=\"Shut up, eslint.\" />\r\n        </div>\r\n        <h4>\r\n          <a\r\n            className=\"project-link\"\r\n            href={project.github}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Github\r\n          </a>\r\n          <a\r\n            className=\"project-link\"\r\n            href={project.live}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Live Demo\r\n          </a>\r\n        </h4>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Project;","import React from 'react';\r\nimport projects from './data/project_data';\r\nimport Project from './Project';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\n\r\nconst Projects = (props) => {\r\n\r\n    return (\r\n      <TransitionGroup>\r\n        <CSSTransition timeout={{ enter: 300, exit: 300 }} classNames={\"projects\"}>\r\n          <div className=\"projects\">\r\n            <div className=\"projects-intro\">\r\n              <p>\r\n                This section is dedicated to the project's i've worked on over\r\n                the past year and a half. I am always starting new projects and\r\n                improving old ones in order to hone my skills and keep on top\r\n                with the latest React features!\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"projects-spread\">\r\n              {projects.map((project) => (\r\n                <Project project={project} key={project.title} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\n\r\nconst Photo = props => {\r\n    return (\r\n        <div className=\"photo\">\r\n            <img alt=\"this is an alt. under protest\" src={props.url}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Photo;","const LINKS = [\r\n  \"https://i.imgur.com/urzRarl.jpg\",\r\n  \"https://i.imgur.com/K3lROQB.jpg\",\r\n  \"https://i.imgur.com/EwNKDzP.jpg\",\r\n  \"https://i.imgur.com/VxgpEYN.jpg\",\r\n  \"https://i.imgur.com/t7fhxGO.jpg\",\r\n  \"https://i.imgur.com/mzUQ0Mg.jpg\",\r\n  \"https://i.imgur.com/Bw3LBwr.jpg\",\r\n  \"https://i.imgur.com/4txKPlm.jpg\",\r\n  \"https://i.imgur.com/puZxoD2.jpg\",\r\n  \"https://i.imgur.com/TclNZbl.jpg\",\r\n  \"https://i.imgur.com/3fdpdtg.jpg\",\r\n  \"https://i.imgur.com/jG3qPQP.jpg\",\r\n  \"https://i.imgur.com/Lh3deDq.jpg\",\r\n];\r\n\r\nexport default LINKS;","import React from 'react';\r\nimport Photo from './Photo';\r\nimport LINKS from './constants/links';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\n\r\nconst Photos = props => {\r\n \r\n    return (\r\n    <TransitionGroup>\r\n        <CSSTransition timeout={{ enter: 300, exit: 300 }}  classNames={'photos'}>\r\n        <div className=\"photos\">\r\n            <div className=\"photos-intro\" >\r\n                <p>I am also a photographer - always looking for new event shoots, commissions, and models to expand my portfolio.  Below is a sample of my work</p>\r\n            </div>\r\n\r\n            <div className=\"photos-spread\">\r\n                {LINKS.map( url => <Photo url={url} key={url}/>)}\r\n            </div>\r\n        </div>\r\n           </CSSTransition>\r\n      </TransitionGroup>\r\n    )\r\n}\r\n\r\nexport default Photos;","import React from 'react';\r\nimport Projects from './Projects';\r\nimport Photos from './Photos'\r\nimport { TransitionGroup, CSSTransition} from \"react-transition-group\";\r\n\r\nconst PAGES = [<Projects />, <Photos />]\r\n\r\nconst MainContent = (props) => {\r\n    const {page} = props;\r\n    return (\r\n      <div className=\"main-content\">\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            key={page}\r\n            timeout={{ enter: 300, exit: 300 }}\r\n            classNames={\"fade\"}\r\n          >\r\n            <div className=\"\">\r\n              {page === 0 && <Projects />}\r\n              {page === 1 && <Photos />}\r\n            </div>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default MainContent;\r\n\r\n/**\r\n *      <TransitionGroup>\r\n        <CSSTransition key={page} timeout={{ enter: 300, exit: 300 }}  classNames={'fade'}>\r\n          <div className=\"main-content\" >\r\n            {page === 0 && <Projects />}\r\n            {page === 1 && <Photos />}\r\n          </div>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n */\r\n\r\n /**\r\n  *      {page === 0 && <Projects />}\r\n        {page === 1 && <Photos />}\r\n  */\r\n\r\n  /**\r\n   *   <div className=\"main-content\" >\r\n              {PAGES[page]}\r\n          </div>\r\n   */","const BACKDROPS = [\r\n  \"https://ak3.picdn.net/shutterstock/videos/1007299423/thumb/1.jpg\",\r\n  \"https://www.plm.automation.siemens.com/media/global/en/agile-sprint-board-kanban_tcm27-55805.jpg\",\r\n  \"https://wallpaperplay.com/walls/full/5/a/a/77451.jpg\",\r\n  \"https://images.unsplash.com/photo-1550645612-83f5d594b671?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&w=1000&q=80\",\r\n  \"https://solusconnect.com/wp-content/uploads/SOLUSMOVIE_thumb300.jpg\",\r\n  \"https://wallpapercave.com/wp/wp1828913.jpg\",\r\n  \"https://www.itl.cat/pngfile/big/82-822314_uhd-printed-circuit-board.jpg\",\r\n  \"https://cdn.hipwallpaper.com/i/77/0/5WKDzl.jpg\",\r\n  \"https://c4.wallpaperflare.com/wallpaper/193/203/796/futuristic-tech-geometry-cyan-wallpaper-preview.jpg\",\r\n];\r\n\r\nexport default BACKDROPS;\r\n","import React, {useState, useEffect} from 'react';\r\nimport BACKDROPS from \"./constants/backdrops\";\r\nimport $ from 'jquery';\r\n\r\nconst Background = (props) => {\r\n    const [index, cycleBackdrop] = useState(0);    \r\n    useEffect(() => {\r\n        const interval = setInterval((BACKDRROPS) => {\r\n        let newIndex = index === (BACKDROPS.length -1 ) ? 0 : (index + 1);\r\n        cycleBackdrop(newIndex);\r\n        $(\"background-image\").fadeIn();\r\n        }, 4000);\r\n        return () => clearInterval(interval);\r\n    }, [index])\r\n\r\n    \r\n    return ( <div  className=\"background-image\" style={{ backgroundImage: `url(${BACKDROPS[index]})` }} /> );\r\n}\r\n\r\nexport default Background;","import React from 'react';\r\n\r\nconst Intro = () => {\r\n    return (\r\n        <div className=\"intro\">\r\n            <h1 className=\"name\"> Aaron Russell Goddard</h1>\r\n            <h2 className=\"title\">Full-Stack Software Engineer</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Intro;","import React, {useState, useEffect} from 'react';\nimport './App.scss';\nimport Nav from './Nav';\nimport MainContent from './MainContent';\nimport Background from './Background';\nimport Intro from './Intro';\n\nconst App = () =>{\n  const [page, setPage] = useState(0);\n\n  const navigate = (e) => {\n    const index = parseInt(e.target.getAttribute(\"name\"));\n    setPage(index)\n  }  \n  return ( \n    <div className=\"App\" id=\"App\" >\n       <Intro />\n       <Nav navigate={navigate} page={page}/>\n       <MainContent page={page}/> \n       <Background />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}