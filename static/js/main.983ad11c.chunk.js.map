{"version":3,"sources":["images/BG01.jpg","images/BG02.jpg","images/BG03.jpg","images/BG04.jpg","images/BG05.jpg","images/BG06.jpg","images/BG07.jpg","Nav.jsx","data/project_data.js","Project.jsx","Projects.jsx","Photo.jsx","constants/links.js","Photos.jsx","AboutMe.jsx","MainContent.jsx","Background.jsx","Intro.jsx","widgets/Tooltip.jsx","helpers/helpers.js","widgets/AbTestToggle.jsx","SpartaClicky.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","props","navigate","page","testGroup","className","onClick","name","project_data","title","image","description","github","live","Project","project","href","target","rel","src","alt","Projects","TransitionGroup","CSSTransition","timeout","enter","exit","classNames","projects","map","key","Photo","url","LINKS","Photos","AboutMe","top","MainContent","BACKDROPS","BG1","BG2","BG3","BG4","BG5","BG6","BG7","preloadImages","arrayOfImageURL","images","i","length","Image","push","Background","useState","index","cycleBackdrop","useEffect","interval","setInterval","$","fadeIn","clearInterval","style","backgroundImage","Intro","defaultProps","Tooltip","background","color","message","direction","hidden","orientation","value","positionFinder","console","log","AbTestToggle","toggle","toggleHidden","tooltips","toggleTooltips","onMouseEnter","onMouseLeave","toUpperCase","SpartaClicky","bouncing","bounce","a","secondMove","css","right","WebkitTransform","thirdMove","fourthMove","fifthMove","visibility","firstMove","setTimeout","id","App","setPage","setTestGroup","lever","Audio","e","parseInt","getAttribute","preventDefault","play","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,sKC6B5BC,G,MAlBH,SAACC,GAAW,IACbC,EAA6BD,EAA7BC,SAAUC,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,UACvB,OACI,yBAAKC,UAAU,OACX,0BAAMA,UAAS,mBAAuB,IAATF,EAAa,SAAU,IAAMG,QAASJ,EAAUK,KAAK,KAAlF,YACA,0BAAMF,UAAS,mBAAuB,IAATF,EAAa,SAAW,IAAMG,QAASJ,EAAUK,KAAK,KAAnF,UACe,MAAdH,GAAqB,0BAAMC,UAAS,mBAAuB,IAATF,EAAa,SAAW,IAAMG,QAASJ,EAAUK,KAAK,KAAnF,eCyBnBC,EA1CM,CACnB,CACEC,MAAO,QACPC,MAAO,kCACPC,YACE,oLACFC,OAAQ,oCACRC,KAAM,gDAER,CACEJ,MAAO,UACPC,MAAO,kCACPC,YACE,kLACFC,OAAQ,sCACRC,KAAM,oCAER,CACEJ,MAAO,qBACPC,MAAO,kCACPC,YACE,4TACFC,OAAQ,+CACRC,KAAM,iDAER,CACEJ,MAAO,mBACPC,MAAO,kCACPC,YACE,wLACFC,OAAQ,0CACRC,KAAM,2CAER,CACEJ,MAAO,4BACPC,MAAO,kCACPC,YAAa,4DACbC,OAAQ,2CACRC,KAAM,6CCcKC,EA3CC,SAAAb,GAAU,IACfc,EAAWd,EAAXc,QACP,OACE,yBAAKV,UAAU,WACb,uBACEA,UAAU,gBACVW,KAAMD,EAAQF,KACdI,OAAO,SACPC,IAAI,uBAEH,IACAH,EAAQN,OAEX,uBAAGJ,UAAU,uBAAuBU,EAAQJ,aAC5C,yBAAKN,UAAU,qBACb,yBAAKc,IAAKJ,EAAQL,MAAOU,IAAI,sBAE/B,4BACE,uBACEf,UAAU,eACVW,KAAMD,EAAQH,OACdK,OAAO,SACPC,IAAI,uBAJN,UAQA,uBACEb,UAAU,eACVW,KAAMD,EAAQF,KACdI,OAAO,SACPC,IAAI,uBAJN,gB,gBCEKG,EA1BE,SAACpB,GAEd,OACE,kBAACqB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAeC,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAAOC,WAAY,YAC7D,yBAAKtB,UAAU,YACb,yBAAKA,UAAU,kBACb,mQAQF,yBAAKA,UAAU,mBACZuB,EAASC,KAAI,SAACd,GAAD,OACZ,kBAAC,EAAD,CAASA,QAASA,EAASe,IAAKf,EAAQN,gBCNzCsB,EAZD,SAAA9B,GACV,OACI,yBAAKI,UAAU,SACX,yBAAKe,IAAI,GAAGD,IAAKlB,EAAM+B,QCGpBC,EAhBD,CACZ,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,kCACA,mCCoBaC,EAnBA,SAAAjC,GAEX,OACA,kBAACqB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAeC,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAAQC,WAAY,UAChE,yBAAKtB,UAAU,UACX,yBAAKA,UAAU,gBACX,6KAGJ,yBAAKA,UAAU,iBACV4B,EAAMJ,KAAK,SAAAG,GAAG,OAAI,kBAAC,EAAD,CAAOA,IAAKA,EAAKF,IAAKE,YCsC1CG,EAvDC,SAAAlC,GACZ,OACE,yBAAKI,UAAS,mBAAcJ,EAAMmC,IAAM,MAAQ,KAC7CnC,EAAMmC,KAAO,wCACd,yBAAK/B,UAAS,2BAAsBJ,EAAMmC,IAAM,MAAQ,KACtD,wBAAI/B,UAAU,qBAAd,WACA,uBAAGA,UAAU,iBAAb,ubAWF,yBAAKA,UAAS,iCAA4BJ,EAAMmC,IAAM,MAAQ,KAC5D,yBAAK/B,UAAU,iBACb,0BAAMA,UAAU,qBAAhB,UACA,4BACE,qCACA,0CACA,uCACA,6CACA,qCACA,uCACA,sCACA,qCAIJ,yBAAKA,UAAU,iBACb,0BAAMA,UAAU,qBAAhB,WACE,4BACE,uCACF,2CACA,0CACA,2CACA,uCACA,2CCbCgC,EA3BK,SAACpC,GAAW,IACrBE,EAAmBF,EAAnBE,KAAMC,EAAaH,EAAbG,UACb,OACE,yBAAKC,UAAU,gBACb,kBAACiB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CACEO,IAAK3B,EACLqB,QAAS,CAAEC,MAAO,IAAKC,KAAM,KAC7BC,WAAY,QAEZ,yBAAKtB,UAAU,IACH,IAATF,GAAc,kBAAC,EAAD,MACL,IAATA,GAAc,kBAAC,EAAD,MACJ,IAATA,GAA4B,MAAdC,GAAsB,kBAAC,EAAD,W,uICH9CkC,EAAY,CAACC,IAAKC,IAAKC,IAAKC,IAAKC,IAAKC,IAAKC,KA0B3CC,EAAiB,SAAAC,GAEnB,IADA,IAAIC,EAAS,GACJC,EAAE,EAAGA,EAAIF,EAAgBG,OAAQD,IAAK,CAC3C,IAAIvC,EAAQ,IAAIyC,MAAMJ,EAAgBE,IACtCD,EAAOI,KAAK1C,GAEhB,OAAOsC,GAGIK,EAjCI,SAACpD,GAAW,IAAD,EACKqD,mBAAS,GADd,mBACnBC,EADmB,KACZC,EADY,KAIXV,EAAcR,GAa7B,OAVAmB,qBAAU,WACN,IAAMC,EAAWC,aAAa,WAE9BH,EADeD,IAAWjB,EAAUY,OAAQ,EAAM,EAAKK,EAAQ,GAE/DK,IAAE,oBAAoBC,WACnB,KACH,OAAO,kBAAMC,cAAcJ,MAC5B,CAACH,IAGK,yBAAMlD,UAAU,mBAAmB0D,MAAO,CAAEC,gBAAgB,OAAD,OAAS1B,EAAUiB,GAAnB,SCjClEU,EAAQ,SAAChE,GACX,OACI,yBAAKI,UAAU,SACX,wBAAIA,UAAU,QAAd,0BACA,wBAAIA,UAAU,SAAd,gCACqB,MAApBJ,EAAMG,WAAqB,kBAAC,EAAD,CAASgC,KAAK,MAMtD6B,EAAMC,aAAe,CACjB9D,UAAW,KAMA6D,Q,gBCQAE,EApBC,SAAAlE,GAAU,IACfmE,EAAiDnE,EAAjDmE,WAAYC,EAAqCpE,EAArCoE,MAAOC,EAA8BrE,EAA9BqE,QAASC,EAAqBtE,EAArBsE,UAAWC,EAAUvE,EAAVuE,OACxCC,ECNoB,SAACF,GAC7B,OAAQA,GACN,IAAK,QACH,MAAO,CAAEhE,KAAM,MAAOmE,MAAO,UAC/B,IAAK,OACH,MAAO,CAAEnE,KAAM,MAAOmE,MAAO,WAE/B,IAAK,OACH,MAAO,CAAEnE,KAAM,OAAQmE,MAAO,SAChC,IAAK,QACH,MAAO,CAAEnE,KAAM,OAAQmE,MAAO,QAC9B,QACE,MAAO,CAACnE,KAAM,UAAWmE,MAAO,4BDNhBC,CAAeJ,GAC7BR,EAAK,aAAI,MAASM,EAAO,WAAcD,GAAaK,EAAYlE,KAA3D,UAAqEkE,EAAYC,QAE5F,OADAE,QAAQC,IAAId,GAER,yBAAK1D,UAAS,kBAAamE,EAAS,SAAW,GAAjC,YAAuCD,GAAaR,MAAOA,GACnEO,IEkDCQ,EApDM,SAAA7E,GAAU,IACpB8E,EAAqB9E,EAArB8E,OAAQ3E,EAAaH,EAAbG,UADW,EAEKkD,oBAAS,GAFd,mBAEnBkB,EAFmB,KAEXQ,EAFW,OAIS1B,mBAAS,CAAC,OAAS,EAAO,QAAU,IAJ7C,mBAInB2B,EAJmB,KAITC,EAJS,KAW1B,OACE,yBAAK7E,UAAS,yBAAoBmE,EAAS,YAAc,KACvD,yBAAKnE,UAAU,kBACVC,QARW,WAChB0E,GAAaR,IAOcjE,KAAK,QAC3B4E,aAAc,kBAAMD,EAAe,CAAC,OAAS,KAC7CE,aAAc,kBAAMF,EAAe,CAAE,OAAS,MAEhDV,EAAS,kBAAC,IAAD,MAA4B,kBAAC,IAAD,MACtC,kBAAC,EAAD,CACEA,QAASS,EAAQ,MACjBZ,MAAM,QACND,WAAW,QACXG,UAAU,QACVD,QAASE,EAAS,OAAS,UAI3B,4BACGnE,UAAS,sBAAiBmE,EAAS,YAAc,IACjDlE,QAASyE,EAAQxE,KAAK,SACtB4E,aAAc,kBAAMD,EAAe,CAAE,QAAU,KAC/CE,aAAc,kBAAMF,EAAe,CAAE,QAAU,MAJlD,UAQJ,kBAAC,EAAD,CACEV,QAASS,EAAQ,OACjBZ,MAAM,QACND,WAAW,QACXG,UAAU,QACVD,QAAO,sEAAiElE,EAAUiF,cAA3E,kF,yBC+BFC,EA7EO,WAAO,IAAD,EACShC,oBAAS,GADlB,mBACjBiC,EADiB,KAElBC,GAFkB,KAEZ,uCAAG,kCAAAC,EAAA,sDAaLC,EAAa,WACf9B,IAAE,kBAAkB+B,IAAI,CACpBvD,IAAK,EACLwD,MAAO,IACPC,gBAAiB,oBAInBC,EAAY,WACdlC,IAAE,kBAAkB+B,IAAI,CACpBvD,IAAK,IACLwD,MAAO,IACPC,gBAAiB,oBAInBE,EAAa,WACfnC,IAAE,kBAAkB+B,IAAI,CACpBvD,IAAK,EACLwD,MAAO,IACPC,gBAAiB,oBAInBG,EAAY,WACVpC,IAAE,kBAAkB+B,IAAI,CACpBvD,IAAK,IACLwD,MAAO,IACPC,gBAAiB,mBAnCX,WAAOjC,IAAE,kBAAkB+B,IAAI,CAC7CvD,IAAK,IACLwD,MAAO,IACPK,WAAY,UACZJ,gBAAiB,kBAoCjBK,GACAC,WAAWT,EAAY,KACvBS,WAAWL,EAAW,KACtBK,WAAWJ,EAAY,KACvBI,WAAWH,EAAW,KAlDf,4CAAH,sDAsEZ,OACI,yBAAK3F,UAAS,iBAAYkF,EAAW,WAAa,IAAMa,GAAG,gBAAgB9F,QAASiF,EAAW,kBAAM,GAAQC,KCrBtGa,EAnDH,WAAM,IAAD,EACS/C,mBAAS,GADlB,mBACRnD,EADQ,KACFmG,EADE,OAEmBhD,mBAAS,KAF5B,mBAERlD,EAFQ,KAEGmG,EAFH,KAGTC,EAAQ,IAAIC,MAChB,qFA0BF,OAEI,kBAACnF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CACEO,IAAK1B,EACLoB,QAAS,CAAEC,MAAO,IAAMC,KAAM,KAC9BC,WAAY,UAEhB,yBAAKtB,UAAU,MAAM+F,GAAG,OACtB,kBAAC,EAAD,CAAOhG,UAAWA,IAClB,kBAAC,EAAD,CAAKF,SAdI,SAACwG,GAChB,IAAMnD,EAAQoD,SAASD,EAAEzF,OAAO2F,aAAa,SAC7CN,EAAQ/C,IAYuBpD,KAAMA,EAAMC,UAAWA,IAChD,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAaD,KAAMA,EAAMC,UAAWA,IACpC,kBAAC,EAAD,CAAc2E,OAhCE,SAAC2B,GACvBA,EAAEG,iBACFL,EAAMM,OAEJP,EADgB,MAAdnG,EACW,IAEA,MA0B8BA,UAAWA,IAClD,kBAAC,EAAD,UC3CU2G,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAEL,kBAAC,EAAD,MAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnD,QAAQmD,MAAMA,EAAMzD,c","file":"static/js/main.983ad11c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/BG01.63b20f25.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BG02.276c3f25.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BG03.97cfe460.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BG04.f83dfa95.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BG05.6ac8ebba.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BG06.c28ea6d6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BG07.76432918.jpg\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n/**\r\n * Expected Props\r\n * \r\n * navigate: Function\r\n * page: Integer\r\n * testGroup: String one of [\"a\", \"b\"]\r\n * @param {*} props \r\n */\r\n\r\nconst Nav = (props) => {\r\n    const {navigate, page, testGroup} = props\r\n    return (\r\n        <div className=\"nav\">\r\n            <span className={`nav-link ${page === 0 ? 'active': ''}`} onClick={navigate} name=\"0\">Projects</span>\r\n            <span className={`nav-link ${page === 1 ? 'active' : ''}`} onClick={navigate} name=\"1\">Photos</span>\r\n            {testGroup === \"b\" && <span className={`nav-link ${page === 2 ? 'active' : ''}`} onClick={navigate} name=\"2\">About Me</span>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nNav.propTypes = {\r\n    navigate: PropTypes.func,\r\n    page: PropTypes.number,\r\n    testGroup: PropTypes.string\r\n}\r\n\r\nexport default Nav;\r\n","const project_data = [\r\n  {\r\n    title: \"Swyle\",\r\n    image: \"https://i.imgur.com/87lXPrY.png\",\r\n    description:\r\n      \"A websocket-powered blogging platform. It uses Ruby on Rails, GraphQL, Apollo, and React.  Post your own articles, upload images, make comments, react to posts in many fun ways.\",\r\n    github: \"https://github.com/genxhero/swyle\",\r\n    live: \"https://afternoon-eyrie-69554.herokuapp.com/\",\r\n  },\r\n  {\r\n    title: \"Fliquor\",\r\n    image: \"https://i.imgur.com/kgdpWhZ.png\",\r\n    description:\r\n      \"Functonal clone of Flickr built with Rails on the backend, React on the frontend, and some very sweet CSS. Come on in, share your photos, leave comments, find you inspiration!\",\r\n    github: \"https://github.com/genxhero/fliquor\",\r\n    live: \"https://fliquor.herokuapp.com/#/\",\r\n  },\r\n  {\r\n    title: \"Library of Legends\",\r\n    image: \"https://i.imgur.com/NXOzKc0.png\",\r\n    description:\r\n      \"A MERN application utilizing GraphQL for creating and storing characters made for the Pathfinder Role Playing Game Second Edition. It displays information to the user with a React front-end and uses GraphQL to make API calls to a Mongo and Express back-end while a character's image is stored on an AWS S3 bucket.\",\r\n    github: \"https://github.com/genxhero/libraryoflegends\",\r\n    live: \"https://cryptic-plains-92849.herokuapp.com/#/\",\r\n  },\r\n  {\r\n    title: \"Hedronite Attack\",\r\n    image: \"https://i.imgur.com/C6dgA4I.png\",\r\n    description:\r\n      \"Built in JavaScript using HTML5 and Canvas libraries, Hedronite Attack is a fast- paced, action - packed game with the kind of difficulty that anyone born in the 80s can appreciate!\",\r\n    github: \"https://github.com/genxhero/vectorsigma\",\r\n    live: \"https://genxhero.github.io/vectorsigma/\",\r\n  },\r\n  {\r\n    title: \"Aaron Goddard's Portfolio\",\r\n    image: \"https://i.imgur.com/79zH1UY.jpg\",\r\n    description: \"This very portfolio is, in and of itself, a React project\",\r\n    github: \"https://github.com/genxhero/portfolionew\",\r\n    live: \"https://genxhero.github.io/portfolionew/\",\r\n  },\r\n];\r\n\r\nexport default project_data;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n/**\r\n * Displays information for a single project.\r\n * Expected Props\r\n * \r\n * project: Object (TODO: shape)\r\n * @param {*} props \r\n */\r\nconst Project = props => {\r\n    const {project} = props;\r\n    return (\r\n      <div className=\"project\">\r\n        <a\r\n          className=\"project-title\"\r\n          href={project.live}\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          {\" \"}\r\n          {project.title}\r\n        </a>\r\n        <p className=\"project-description\">{project.description}</p>\r\n        <div className=\"project-thumbnail\">\r\n          <img src={project.image} alt=\"Shut up, eslint.\" />\r\n        </div>\r\n        <h4>\r\n          <a\r\n            className=\"project-link\"\r\n            href={project.github}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Github\r\n          </a>\r\n          <a\r\n            className=\"project-link\"\r\n            href={project.live}\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Live Demo\r\n          </a>\r\n        </h4>\r\n      </div>\r\n    );\r\n}\r\n\r\nProject.propTypes = {\r\n  project: PropTypes.object\r\n}\r\n\r\nexport default Project;","import React from 'react';\r\nimport projects from './data/project_data';\r\nimport Project from './Project';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\n/**\r\n * \r\n * Displays a project component for every project in the database. ewgf\r\n * \r\n * @param {*} props \r\n */\r\nconst Projects = (props) => {\r\n\r\n    return (\r\n      <TransitionGroup>\r\n        <CSSTransition timeout={{ enter: 300, exit: 300 }} classNames={\"projects\"}>\r\n          <div className=\"projects\">\r\n            <div className=\"projects-intro\">\r\n              <p>\r\n                This section is dedicated to the project's i've worked on over\r\n                the past six years (on and off). I am always starting new projects and\r\n                improving old ones in order to hone my skills and keep on top\r\n                with the latest React features!\r\n              </p>\r\n            </div>\r\n\r\n            <div className=\"projects-spread\">\r\n              {projects.map((project) => (\r\n                <Project project={project} key={project.title} />\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n    );\r\n}\r\n\r\nexport default Projects;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Expected Props\r\n * \r\n * url: String, link to a photograph\r\n * \r\n * @param {*} props \r\n */\r\nconst Photo = props => {\r\n    return (\r\n        <div className=\"photo\">\r\n            <img alt=\"\" src={props.url}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nPhoto.propTypes = {\r\n    url: PropTypes.string\r\n}\r\n\r\nexport default Photo;","const LINKS = [\r\n  \"https://i.imgur.com/urzRarl.jpg\",\r\n  \"https://i.imgur.com/K3lROQB.jpg\",\r\n  \"https://i.imgur.com/EwNKDzP.jpg\",\r\n  \"https://i.imgur.com/VxgpEYN.jpg\",\r\n  \"https://i.imgur.com/t7fhxGO.jpg\",\r\n  \"https://i.imgur.com/mzUQ0Mg.jpg\",\r\n  \"https://i.imgur.com/Bw3LBwr.jpg\",\r\n  \"https://i.imgur.com/4txKPlm.jpg\",\r\n  \"https://i.imgur.com/puZxoD2.jpg\",\r\n  \"https://i.imgur.com/TclNZbl.jpg\",\r\n  \"https://i.imgur.com/3fdpdtg.jpg\",\r\n  \"https://i.imgur.com/jG3qPQP.jpg\",\r\n  \"https://i.imgur.com/Lh3deDq.jpg\",\r\n];\r\n\r\nexport default LINKS;","import React from 'react';\r\nimport Photo from './Photo';\r\nimport LINKS from './constants/links';\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\n\r\n/**\r\n * Expected Props\r\n * \r\n * actually good question...I don't see any props here... \r\n * \r\n * \r\n * @param {*} props \r\n */\r\nconst Photos = props => {\r\n \r\n    return (\r\n    <TransitionGroup>\r\n        <CSSTransition timeout={{ enter: 300, exit: 300 }}  classNames={'photos'}>\r\n        <div className=\"photos\">\r\n            <div className=\"photos-intro\" >\r\n                <p>I am also a photographer - always looking for new event shoots, commissions, and models to expand my portfolio.  Below is a sample of my work</p>\r\n            </div>\r\n\r\n            <div className=\"photos-spread\">\r\n                {LINKS.map( url => <Photo url={url} key={url}/>)}\r\n            </div>\r\n        </div>\r\n           </CSSTransition>\r\n      </TransitionGroup>\r\n    )\r\n}\r\n\r\nexport default Photos;","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n/**\r\n * TODO: in/out animation unless that's going to be attached to the main app's testGroup stateslice?\r\n * @param {*} props \r\n */\r\n\r\nconst AboutMe = props => {\r\n    return (\r\n      <div className={`about-me ${props.top ? \"top\" : \"\"}`}>\r\n        {props.top && <h1>About Me</h1>}\r\n        <div className={`about-me-section ${props.top ? \"top\" : \"\"}`}>\r\n          <h3 className=\"about-me-subtitle\">History</h3>\r\n          <p className=\"about-me-text\">\r\n             Born and bred in Southern California, I grew up around the time the internet was\r\n            really starting to take off. As a result, I've always immersed\r\n            myself in technology. What I like about web development is the\r\n            gestalt, the omnibus: every little thing about it fills me with\r\n            exhilaration! The way I an apply my problem solving skills (and love\r\n            for puzzles), the way I can exercise my creativity on a canvas of\r\n            code, I could go on forever!\r\n          </p>\r\n        </div>\r\n\r\n        <div className={`about-me-section multi ${props.top ? \"top\" : \"\"}`}>\r\n          <div className=\"about-me-list\">\r\n            <span className=\"about-me-subtitle\">Skills</span>\r\n            <ul>\r\n              <li>React</li>\r\n              <li>JavaScript</li>\r\n              <li>Express</li>\r\n              <li>Ruby on Rails</li>\r\n              <li>Redux</li>\r\n              <li>GraphQL</li>\r\n              <li>HTML/5</li>\r\n              <li>CSS</li>\r\n            </ul>\r\n           \r\n          </div>\r\n          <div className=\"about-me-list\">\r\n            <span className=\"about-me-subtitle\">Hobbies</span>\r\n              <ul>\r\n                <li>Writing</li>\r\n              <li>Video Games</li>\r\n              <li>Road Trips</li>\r\n              <li>Photography</li>\r\n              <li>Cooking</li>\r\n              <li>Comedy</li>\r\n              </ul>\r\n          </div>\r\n\r\n\r\n          \r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nAboutMe.propTypes = {\r\n  top: PropTypes.bool\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport Projects from './Projects';\r\nimport Photos from './Photos';\r\nimport AboutMe from './AboutMe';\r\nimport { TransitionGroup, CSSTransition} from \"react-transition-group\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nconst MainContent = (props) => {\r\n    const {page, testGroup} = props;\r\n    return (\r\n      <div className=\"main-content\">\r\n        <TransitionGroup>\r\n          <CSSTransition\r\n            key={page}\r\n            timeout={{ enter: 300, exit: 300 }}\r\n            classNames={\"fade\"}\r\n          >\r\n            <div className=\"\">\r\n              {page === 0 && <Projects />}\r\n              {page === 1 && <Photos />}\r\n              {(page === 2 && testGroup === \"b\") && <AboutMe />}\r\n            </div>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nMainContent.propTypes = {\r\n  page: PropTypes.number,\r\n  testGroup: PropTypes.string\r\n}\r\n\r\nexport default MainContent;\r\n\r\n/**\r\n *      <TransitionGroup>\r\n        <CSSTransition key={page} timeout={{ enter: 300, exit: 300 }}  classNames={'fade'}>\r\n          <div className=\"main-content\" >\r\n            {page === 0 && <Projects />}\r\n            {page === 1 && <Photos />}\r\n          </div>\r\n        </CSSTransition>\r\n      </TransitionGroup>\r\n */\r\n\r\n /**\r\n  *      {page === 0 && <Projects />}\r\n        {page === 1 && <Photos />}\r\n  */\r\n\r\n  /**\r\n   *   <div className=\"main-content\" >\r\n              {PAGES[page]}\r\n          </div>\r\n   */","import React, {useState, useEffect} from 'react';\r\n//import BACKDROPS from \"./constants/backdrops\";\r\nimport $ from 'jquery';\r\nimport BG1 from \"./images/BG01.jpg\";\r\nimport BG2 from \"./images/BG02.jpg\";\r\nimport BG3 from \"./images/BG03.jpg\";\r\nimport BG4 from \"./images/BG04.jpg\";\r\nimport BG5 from \"./images/BG05.jpg\";\r\nimport BG6 from \"./images/BG06.jpg\";\r\nimport BG7 from \"./images/BG07.jpg\";\r\n\r\n\r\n/**\r\n * Rotating Background\r\n * TODO: Refactor to use CSS Transition.\r\n * @param {*} props \r\n */\r\n\r\nconst BACKDROPS = [BG1, BG2, BG3, BG4, BG5, BG6, BG7]\r\n\r\nconst Background = (props) => {\r\n    const [index, cycleBackdrop] = useState(0);\r\n\r\n    //\r\n    const images = preloadImages(BACKDROPS);\r\n\r\n\r\n    useEffect(() => {\r\n        const interval = setInterval( () => {\r\n        let newIndex = index === (BACKDROPS.length -1 ) ? 0 : (index + 1);\r\n        cycleBackdrop(newIndex);\r\n        $(\"background-image\").fadeIn();\r\n        }, 4000);\r\n        return () => clearInterval(interval);\r\n    }, [index])\r\n\r\n    \r\n    return ( <div  className=\"background-image\" style={{ backgroundImage: `url(${BACKDROPS[index]})` }} /> );\r\n}\r\n\r\n/**\r\n * \r\n * @param {[string]} arrayOfImageURL \r\n */\r\nconst preloadImages =  arrayOfImageURL => {\r\n    let images = [];\r\n    for (let i=0; i < arrayOfImageURL.length; i++) {\r\n        let image = new Image(arrayOfImageURL[i]);\r\n        images.push(image)\r\n    }\r\n    return images;\r\n}\r\n\r\nexport default Background;\r\n\r\n//  BACKUP RETURN STATEMENT  return ( <div  className=\"background-image\" style={{ backgroundImage: `url(${BACKDROPS[index]})` }} /> );\r\n","import React from 'react';\r\nimport AboutMe from './AboutMe';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Intro = (props) => {\r\n    return (\r\n        <div className=\"intro\">\r\n            <h1 className=\"name\"> Aaron Russell Goddard</h1>\r\n            <h2 className=\"title\">Full-Stack Software Engineer</h2>\r\n            {props.testGroup === \"a\" && <AboutMe top={true} />}\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nIntro.defaultProps = {\r\n    testGroup: \"a\"\r\n}\r\n\r\nIntro.propTypes = {\r\n    testGroup: PropTypes.string\r\n}\r\nexport default Intro;","import React from 'react'; \r\nimport PropTypes from 'prop-types';\r\nimport {positionFinder} from '../helpers/helpers';\r\n\r\n/**\r\n * \r\n * A simple tooltip that floats, can be located anywhere relative to the parent component.\r\n * \r\n * @param {*} props \r\n */\r\nconst Tooltip = props => {\r\n    const {background, color, message, direction, hidden} = props;\r\n    const orientation = positionFinder(direction);\r\n    const style = {\"color\": color, \"background\": background, [orientation.name]: `${orientation.value}` }\r\n    console.log(style)\r\n    return (\r\n        <div className={`tooltip ${hidden ? 'hidden' : ''} ${direction}`} style={style}>\r\n             {message} \r\n        </div>\r\n    )\r\n}\r\n\r\nTooltip.propTypes = {\r\n    background: PropTypes.string,\r\n    color: PropTypes.string,\r\n    message: PropTypes.string,\r\n    direction: PropTypes.string,\r\n    hidden: PropTypes.bool\r\n}\r\n\r\nexport default Tooltip;","export const getRandomInt =(min, max) => {\r\n  min = Math.ceil(min);\r\n  max = Math.floor(max);\r\n  return Math.floor(Math.random() * (max - min)) + min; \r\n}\r\n\r\nexport const positionFinder = (direction) => {\r\n  switch (direction) {\r\n    case \"under\":\r\n      return { name: \"top\", value: \"2.5rem\" }\r\n    case \"over\":\r\n      return { name: \"top\", value: \"-2.5rem\" }\r\n\r\n    case \"left\":\r\n      return { name: \"left\", value: \"-2rem\" }\r\n    case \"right\":\r\n      return { name: \"left\", value: \"3rem\" }\r\n      default:\r\n        return {name: \"Shut Up\", value: \"Go climb a tree, eslint\"}\r\n  }\r\n}","import React, {useState} from 'react';\r\nimport {FaArrowAltCircleRight, FaArrowAltCircleLeft} from 'react-icons/fa';\r\nimport Tooltip from './Tooltip';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n/**\r\n * Expected Props \r\n *\r\n * toggle: Function which mutates the state of the parent component, otherwise a noop\r\n * \r\n * TODO: Get propTypes up in here.\r\n * \r\n * @param {*} props \r\n */\r\nconst AbTestToggle = props => {\r\n    const {toggle, testGroup} = props;\r\n    const [hidden, toggleHidden] = useState(false)\r\n    // Not sure about the nomenclature here\r\n    const [tooltips, toggleTooltips] = useState({\"arrow\": false, \"switch\": false})\r\n\r\n    const handleClick = () => {\r\n        toggleHidden(hidden ? false : true)\r\n    }\r\n\r\n   \r\n    return (\r\n      <div className={`ab-test-toggle ${hidden ? \"collapsed\" : \"\"}`}>\r\n        <div className=\"show-hide-arrow\" \r\n             onClick={handleClick} name=\"arrow\" \r\n             onMouseEnter={() => toggleTooltips({\"arrow\": true})}\r\n             onMouseLeave={() => toggleTooltips({ \"arrow\": false })}\r\n             >\r\n          {hidden ? <FaArrowAltCircleRight /> : <FaArrowAltCircleLeft />}\r\n          <Tooltip \r\n            hidden={!tooltips[\"arrow\"]}\r\n            color=\"black\" \r\n            background=\"white\" \r\n            direction=\"under\" \r\n            message={hidden ? 'Show' : \"Hide\"}\r\n            />\r\n        </div>\r\n      \r\n            <button \r\n               className={`toggle-btn  ${hidden ? 'collapsed' : ''}`} \r\n               onClick={toggle} name=\"switch\"\r\n               onMouseEnter={() => toggleTooltips({ \"switch\": true })}\r\n               onMouseLeave={() => toggleTooltips({ \"switch\": false })}\r\n               >\r\n              Switch\r\n            </button>\r\n        <Tooltip\r\n          hidden={!tooltips[\"switch\"]}\r\n          color=\"black\"\r\n          background=\"white\"\r\n          direction=\"under\"\r\n          message={`Two versions of this page were made. You are in test group \"${testGroup.toUpperCase()}\". Click the button to change test groups and switch between page layouts.`}\r\n        />\r\n      </div>\r\n    );\r\n}\r\n\r\nAbTestToggle.propTypes = {\r\n  toggle: PropTypes.func,\r\n  testGroup: PropTypes.string\r\n}\r\n\r\nexport default AbTestToggle;\r\n\r\n\r\n/**\r\n * \r\n *    \r\n *  <TransitionGroup>\r\n          <CSSTransition\r\n            key={hidden}\r\n            timeout={{ enter: 300, exit: 300 }}\r\n            classNames={\"fade\"}\r\n          >\r\n            <div className=\"\">\r\n              {page === 0 && <Projects />}\r\n              {page === 1 && <Photos />}\r\n              {(page === 2 && testGroup === \"b\") && <AboutMe />}\r\n            </div>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n */","/**\r\n * When you click on this, it bounces around the screen while an excerpt from Wizard's Last Rhymes plays\r\n * \r\n * The purpose is to show off how i can use jquery and React hooks to animate\r\n * \r\n */\r\n\r\nimport React, {useState} from 'react';\r\nimport $ from 'jquery';\r\n\r\nconst SpartaClicky =  () => {\r\n    const [bouncing, toggleBounce] = useState(false)\r\n    const bounce = async () => {\r\n        // toggleBounce(true);\r\n        // let phaseOne = new Promise((resolve, reject) => {\r\n        //     $('#sparta-clicky').css(\"-webkit-transform\", \"translate(-100px, 600px) rotate(-90deg)\")\r\n        // })\r\n\r\n        const firstMove = () => {$('#sparta-clicky').css({\r\n            top: 600,\r\n            right: 200,\r\n            visibility: 'visible',\r\n            WebkitTransform: 'rotate(90deg)'\r\n        })}\r\n        \r\n        const secondMove = () => {\r\n            $('#sparta-clicky').css({\r\n                top: 0,\r\n                right: 400,\r\n                WebkitTransform: 'rotate(180deg)'\r\n            })\r\n        }\r\n\r\n        const thirdMove = () => {\r\n            $('#sparta-clicky').css({\r\n                top: 600,\r\n                right: 600,\r\n                WebkitTransform: 'rotate(270deg)'\r\n            })\r\n        }\r\n     \r\n        const fourthMove = () => {\r\n            $('#sparta-clicky').css({\r\n                top: 0,\r\n                right: 800,\r\n                WebkitTransform: 'rotate(360deg)'\r\n            })\r\n        }\r\n\r\n        const fifthMove = () => {\r\n                $('#sparta-clicky').css({\r\n                    top: 600,\r\n                    right: 1000,\r\n                    WebkitTransform: 'rotate(90deg)'\r\n                })\r\n        }\r\n\r\n\r\n            firstMove();\r\n            setTimeout(secondMove, 1000);\r\n            setTimeout(thirdMove, 2000);\r\n            setTimeout(fourthMove, 3000);\r\n            setTimeout(fifthMove, 4000)\r\n        //   $('#sparta-clicky').css(\"-webkit-transform\", \"translate(-100px, 600px) rotate(-90deg)\")\r\n        //  setTimeout( () => $('#sparta-clicky').css(\"-webkit-transform\", \"translate(-800px, -1200px) rotate(-180deg)\"), 1000)\r\n        // setTimeout(() => $('#sparta-clicky').css(\"-webkit-transform\", \"translate(-1300px, 600px) rotate(-180deg)\"), 1000)\r\n\r\n      \r\n        // await phaseOne\r\n\r\n        // let phaseTwo = new Promise((resolve, reject )=> {\r\n        //     $('#sparta-clicky').css(\"-webkit-transform\", \"translate(600px, -500px) rotate(90deg)\")\r\n        // })\r\n        // // .then( () => {\r\n        // //     $('#sparta-clicky').css(\"-webkit-transform\", \"translate(600px, -500px) rotate(90deg)\" )\r\n        // // });\r\n        \r\n        // await phaseTwo\r\n        \r\n\r\n        //Do a bunch of jquery, wait for thing to come back to original position, then set bouncing to false again\r\n    }\r\n    return (\r\n        <div className={`sparta ${bouncing ? 'bouncing' : ''}`} id=\"sparta-clicky\" onClick={bouncing ? () => false : bounce} />\r\n    )\r\n}\r\n\r\nexport default SpartaClicky;","import React, {useState} from 'react';\nimport './App.scss';\nimport Nav from './Nav';\nimport MainContent from './MainContent';\nimport Background from './Background';\nimport Intro from './Intro';\nimport AbTestToggle from './widgets/AbTestToggle';\nimport { TransitionGroup, CSSTransition} from \"react-transition-group\";\nimport SpartaClicky from './SpartaClicky';\n\n\nconst App = () =>{\n  const [page, setPage] = useState(0);\n  const [testGroup, setTestGroup] = useState(\"b\")\n  const lever = new Audio(\n    \"https://reactportfolio-sfx.s3-us-west-1.amazonaws.com/typewriter-line-break-1.wav\"\n  );\n\n\n  /**\n   * If more tests are added, will swap to a case statement.\n   */\n  const toggleTestGroup = (e) => {\n    e.preventDefault();\n    lever.play();\n    if (testGroup === \"a\") {\n      setTestGroup(\"b\")\n    } else {\n      setTestGroup(\"a\")\n    }\n  }\n\n  /**\n   * Load a different React component, to get around Netlify's difficulty with React Router\n   * \n   * @param {*} e \n   */\n  const navigate = (e) => {\n    const index = parseInt(e.target.getAttribute(\"name\"));\n    setPage(index)\n  }  \n  return ( \n\n      <TransitionGroup>\n          <CSSTransition\n            key={testGroup}\n            timeout={{ enter: 1000, exit: 1000 }}\n            classNames={\"scroll\"}\n          >\n        <div className=\"App\" id=\"App\" >\n          <Intro testGroup={testGroup}/>\n          <Nav navigate={navigate} page={page} testGroup={testGroup}/>\n          <SpartaClicky />\n          <MainContent page={page} testGroup={testGroup}/> \n          <AbTestToggle toggle={toggleTestGroup} testGroup={testGroup}/>\n          <Background />\n        </div>\n     </CSSTransition>\n       </TransitionGroup>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  \n    <App />\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}